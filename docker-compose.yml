version: '3'

### Services ###
services:
  nginx:
    container_name: nginx
    image: nginx
    restart: always
    command: ["nginx", "-g", "daemon off;"]
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf
      - ${CERT_PATH}:/etc/nginx/ssl/inception.crt
      - ${CERT_KEY_PATH}:/etc/nginx/ssl/inception.key
      - static_django_files:/static
      - ${PWD}/media:/media
    ports:
      - "80:80"
      - "443:443"

  frontend:
    container_name: frontend
    build:
      context: .
      dockerfile: frontend/Dockerfile
      args:
        - DOMAIN
        - CERT_PATH
        - CERT_KEY_PATH
    env_file:
      - .env_frontend
    restart: always
    volumes:
      - ./frontend/app:/code

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: backend/Dockerfile
      args:
        - CERT_PATH
        - CERT_KEY_PATH
    env_file:
      - .env
    depends_on:
      - db
    restart: always
    volumes:
      - ./backend/files:/code
      - static_django_files:/static
      - ./media:/media
    # ports:
    #   - 8000:8000

  db:
    container_name: db
    image: postgres:15.5-bookworm
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - postgres:/var/lib/postgresql/data

  adminer:
    container_name: adminer
    image: adminer
    restart: always

  # logstash:
  #   container_name: logstash
  #   image: logstash:8.12.0
  #   restart: unless-stopped
  #   env_file:
  #     - .env
  #   volumes:
  #     - ./logstash/pipline:/usr/share/logstash/pipeline
  #     - ./logstash/settings/logstash.yml:/usr/share/logstash/config/logstash.yml

  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:8.12.0
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      # - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./elasticsearch/data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "-k", "-f", "https://localhost:9200"]
      interval: 30s
      timeout: 10s
      retries: 3
    ports:
      - "9200:9200"
      - "9300:9300"

  kibana:
    container_name: kibana
    image: kibana:8.12.0
    restart: unless-stopped
    depends_on:
      - elasticsearch
    env_file:
      - .env
    volumes:
      - ./kibana/kibana-start.sh:/usr/local/bin/kibana-start.sh
    command: ["/bin/bash", "/usr/local/bin/kibana-start.sh"]
    ports:
      - "5601:5601"


volumes:
  postgres:
  static_django_files: