# set the ssl certificate and key
ssl_certificate         /etc/nginx/ssl/inception.crt;
ssl_certificate_key     /etc/nginx/ssl/inception.key;

# Server for unknown domains
# (The first server block is the fallback server)
server {
    listen 443 ssl;                                         # IPv4
    listen [::]:443 ssl;                                    # IPv6
    ssl_protocols           TLSv1.2 TLSv1.3;                # SSL protocols
    server_name _;                                          # Unknown domain
    location / {    
        return 444;
    }
}

server {
    listen                  443 ssl;
    listen                  [::]:443 ssl;
    ssl_protocols           TLSv1.2 TLSv1.3;
    server_name             DOMAIN;

    # static django files
    location /endpoint/static {
        alias               /static/;
    }
    location /endpoint/media/ {
        alias               /media/;
    }

    # reverse proxy for backend
    location /endpoint {
        proxy_pass          http://backend:8000;
        proxy_set_header    Host $host;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto $scheme;
        # following needed for djangos csrf protection
        proxy_set_header    Origin $http_origin;
        # websocket support
        proxy_http_version  1.1;
        proxy_set_header    Upgrade $http_upgrade;
        proxy_set_header    Connection "upgrade";
    }

    # reverse proxy for adminer
    location /adminer {
        proxy_pass          http://adminer:8080;
        proxy_set_header    Host $host;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto $scheme;
    }

    # reverse proxy for frontend
    location / {
        proxy_pass          http://frontend:3000;
        proxy_set_header    Host $host:$proxy_port;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto $scheme;
        # websocket support (only needed for development)
        proxy_http_version  1.1;
        proxy_set_header    Upgrade $http_upgrade;
        proxy_set_header    Connection "upgrade";
    }
}
