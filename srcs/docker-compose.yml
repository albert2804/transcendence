version: '3'

### Services ###
services:
  nginx:
    build:
      context: .
      dockerfile: requirements/nginx/Dockerfile
      args:
        - DOMAIN
        - CERT_PATH
        - CERT_KEY_PATH
    env_file:
      - .env
    restart: always
    # volumes:
    #   - frontend_data:/code
    networks:
      - transcendencenet
    ports:
      - "443:443"
  frontend:
    build:
      context: .
      dockerfile: requirements/frontend/Dockerfile
      args:
        - CERT_PATH
        - CERT_KEY_PATH
    # restart: always
    volumes:
      - frontend_data:/code
    networks:
      - transcendencenet
    ports:
      - "8080:8080" # needed for development server only
  backend:
    build: ./requirements/backend
    env_file:
      - .env
    restart: always
    volumes:
      - backend_data:/code
    networks:
      - transcendencenet
  db:
    image: postgres
    env_file:
      - .env
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - transcendencenet
  adminer:
    image: adminer
    restart: always
    networks:
      - transcendencenet

### Networks ###
networks:
  transcendencenet:

### Volumes ###
volumes:
  frontend_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: $FRONTEND_DATA_PATH
  backend_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: $BACKEND_DATA_PATH
  db_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: $DB_DATA_PATH
