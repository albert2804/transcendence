version: '3'

### Services ###
services:
  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: requirements/nginx/Dockerfile
      args:
        - DOMAIN
        - CERT_PATH
        - CERT_KEY_PATH
    env_file:
      - .env
    restart: always
    volumes:
      - ./${NGINX_DATA_PATH}:/etc/nginx/conf.d
    networks:
      - transcendencenet
    ports:
      - "443:443"
  frontend:
    container_name: frontend
    build:
      context: .
      dockerfile: requirements/frontend/Dockerfile
      args:
        - DOMAIN
        - CERT_PATH
        - CERT_KEY_PATH
    restart: always
    volumes:
      - ${PWD}/srcs/${FRONTEND_DATA_PATH}:/code
    networks:
      - transcendencenet
  backend:
    container_name: backend
    build: ./requirements/backend
    env_file:
      - .env
    restart: always
    volumes:
      - ${PWD}/srcs/requirements/backend/files:/code
    networks:
      - transcendencenet
  db:
    container_name: db
    image: postgres
    env_file:
      - .env
    restart: always
    volumes:
      - ${PWD}/srcs/${DB_DATA}:/var/lib/postgresql/data
    networks:
      - transcendencenet
  adminer:
    container_name: adminer
    image: adminer
    restart: always
    networks:
      - transcendencenet

### Networks ###
networks:
  transcendencenet:

